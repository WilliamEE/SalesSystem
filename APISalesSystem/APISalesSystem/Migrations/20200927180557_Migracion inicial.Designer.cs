// <auto-generated />
using System;
using APISalesSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APISalesSystem.Migrations
{
    [DbContext(typeof(DbSalesSystemContext))]
    [Migration("20200927180557_Migracion inicial")]
    partial class Migracioninicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APISalesSystem.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdPadre")
                        .HasColumnName("id_padre")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnName("nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdPadre");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("APISalesSystem.PerfilDeUsuario", b =>
                {
                    b.Property<string>("FotoDePerfil")
                        .HasColumnName("fotoDePerfil")
                        .HasColumnType("varchar(400)")
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdUsuario")
                        .HasColumnName("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnName("nombre")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasIndex("IdUsuario");

                    b.ToTable("perfilDeUsuario");
                });

            modelBuilder.Entity("APISalesSystem.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdCategoria")
                        .HasColumnName("id_categoria")
                        .HasColumnType("int");

                    b.Property<int?>("IdPerfil")
                        .HasColumnName("id_perfil")
                        .HasColumnType("int");

                    b.Property<string>("ImagenUrl")
                        .HasColumnName("imagenUrl")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnName("nombre")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Precio")
                        .HasColumnName("precio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("producto");
                });

            modelBuilder.Entity("APISalesSystem.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnName("nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("rol");
                });

            modelBuilder.Entity("APISalesSystem.SolicitudDeAfiliacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasColumnName("estado")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Fecha")
                        .HasColumnName("fecha")
                        .HasColumnType("date");

                    b.Property<string>("PagareUrl")
                        .HasColumnName("pagareUrl")
                        .HasColumnType("varchar(400)")
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.Property<string>("ReciboAguaUrl")
                        .HasColumnType("varchar(400)")
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.Property<string>("ReciboLuzUrl")
                        .HasColumnName("reciboLuzUrl")
                        .HasColumnType("varchar(400)")
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.Property<string>("ReciboTelefonoUrl")
                        .HasColumnName("reciboTelefonoUrl")
                        .HasColumnType("varchar(400)")
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.Property<string>("ReferenciaBancariaUrl")
                        .HasColumnName("referenciaBancariaUrl")
                        .HasColumnType("varchar(400)")
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("SolicitudDeAfiliacion");
                });

            modelBuilder.Entity("APISalesSystem.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contraseña")
                        .HasColumnName("contraseña")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Correo")
                        .HasColumnName("correo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("IdRol")
                        .HasColumnName("id_rol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("APISalesSystem.Categoria", b =>
                {
                    b.HasOne("APISalesSystem.Categoria", "IdPadreNavigation")
                        .WithMany("InverseIdPadreNavigation")
                        .HasForeignKey("IdPadre")
                        .HasConstraintName("FK_categoria_categoria");
                });

            modelBuilder.Entity("APISalesSystem.PerfilDeUsuario", b =>
                {
                    b.HasOne("APISalesSystem.Usuario", "IdUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_perfilDeUsuario_usuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("APISalesSystem.Producto", b =>
                {
                    b.HasOne("APISalesSystem.Categoria", "IdCategoriaNavigation")
                        .WithMany("Producto")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_producto_categoria")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("APISalesSystem.Usuario", b =>
                {
                    b.HasOne("APISalesSystem.Rol", "IdRolNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK_usuario_rol")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
